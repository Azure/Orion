{
    "definition": {
        "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
        "actions": {
            "For_each": {
                "actions": {
                    "For_each_2": {
                        "actions": {
                            "For_each_3": {
                                "actions": {
                                    "Send_an_email_(V2)": {
                                        "inputs": {
                                            "body": {
                                                "Body": "<p>Hello,<br>\n<br>\nThis is a message to warn you we believe a password you had been using has &nbsp;been leaked online, as part of a data breach.<br>\n<br>\nIf the following password is one you are still using commonly, we recommend changing it as soon as possible.<br>\n<br>\n@{items('For_each_3')['hash']}<br>\n<br>\nIn addition we want to remind you not to use your corporate email address to register to services outside of work.<br>\n<br>\nCordially,<br>\n<br>\nSecurity Team<br>\n</p>",
                                                "Subject": "Possible compromised password",
                                                "To": "blank@flare.systems"
                                            },
                                            "host": {
                                                "connection": {
                                                    "name": "@parameters('$connections')['office365']['connectionId']"
                                                }
                                            },
                                            "method": "post",
                                            "path": "/v2/Mail"
                                        },
                                        "runAfter": {},
                                        "type": "ApiConnection"
                                    }
                                },
                                "foreach": "@items('For_each_2')['passwords']",
                                "runAfter": {},
                                "type": "Foreach"
                            }
                        },
                        "foreach": "@body('Parse_JSON')",
                        "runAfter": {
                            "Parse_JSON": [
                                "Succeeded"
                            ]
                        },
                        "type": "Foreach"
                    },
                    "Parse_JSON": {
                        "inputs": {
                            "content": "@items('For_each')",
                            "schema": {
                                "items": {
                                    "properties": {
                                        "name": {
                                            "type": "string"
                                        },
                                        "passwords": {
                                            "items": {
                                                "properties": {
                                                    "domain": {},
                                                    "extra": {
                                                        "properties": {},
                                                        "type": "object"
                                                    },
                                                    "hash": {
                                                        "type": "string"
                                                    },
                                                    "hash_type": {
                                                        "type": "string"
                                                    },
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "imported_at": {
                                                        "type": "string"
                                                    },
                                                    "source_id": {
                                                        "type": "string"
                                                    },
                                                    "source_params": {
                                                        "properties": {
                                                            "line": {
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "required": [
                                                    "id",
                                                    "hash",
                                                    "hash_type",
                                                    "extra",
                                                    "domain",
                                                    "source_id",
                                                    "source_params",
                                                    "imported_at"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "required": [
                                        "name",
                                        "passwords"
                                    ],
                                    "type": "object"
                                },
                                "type": "array"
                            }
                        },
                        "runAfter": {},
                        "type": "ParseJson"
                    }
                },
                "foreach": "@variables('leaks')['leaked_credentials']",
                "runAfter": {
                    "Initialize_variable": [
                        "Succeeded"
                    ]
                },
                "type": "Foreach"
            },
            "Initialize_variable": {
                "inputs": {
                    "variables": [
                        {
                            "name": "leaks",
                            "type": "object",
                            "value": "@json(body('Parse_JSON_2')['Custom Details'])"
                        }
                    ]
                },
                "runAfter": {
                    "Parse_JSON_2": [
                        "Succeeded"
                    ]
                },
                "type": "InitializeVariable"
            },
            "Parse_JSON_2": {
                "inputs": {
                    "content": "@triggerBody()?['ExtendedProperties']",
                    "schema": {
                        "properties": {
                            "Analytic Rule Ids": {
                                "type": "string"
                            },
                            "Analytic Rule Name": {
                                "type": "string"
                            },
                            "Custom Details": {
                                "type": "string"
                            },
                            "Data Sources": {
                                "type": "string"
                            },
                            "Event Grouping": {
                                "type": "string"
                            },
                            "ProcessedBySentinel": {
                                "type": "string"
                            },
                            "Query": {
                                "type": "string"
                            },
                            "Query End Time UTC": {
                                "type": "string"
                            },
                            "Query Period": {
                                "type": "string"
                            },
                            "Query Start Time UTC": {
                                "type": "string"
                            },
                            "Search Query Results Overall Count": {
                                "type": "string"
                            },
                            "Trigger Operator": {
                                "type": "string"
                            },
                            "Trigger Threshold": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "runAfter": {},
                "type": "ParseJson"
            }
        },
        "contentVersion": "1.0.0.0",
        "outputs": {},
        "parameters": {
            "$connections": {
                "defaultValue": {},
                "type": "Object"
            }
        },
        "triggers": {
            "When_a_response_to_an_Azure_Sentinel_alert_is_triggered": {
                "inputs": {
                    "body": {
                        "callback_url": "@{listCallbackUrl()}"
                    },
                    "host": {
                        "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                        }
                    },
                    "path": "/subscribe"
                },
                "type": "ApiConnectionWebhook"
            }
        }
    },
    "parameters": {
    }
}
