Parser:
  Title: Microsoft File Storage - File Event Parser
  Version: '0.1'
  LastUpdated: July 15, 2021
Product:
  Name: Microsoft Azure File Storage
Normalization:
  Schema: FileEvent
  Version: '0.1.0'
References:
- Title: ASIM File Schema
  Link: https://aka.ms/AzSentinelFileEventDoc
- Title: ASIM
  Link: https://aka.ms/AzSentinelNormalization
- Title: Storage Analytics log format
  Link: https://docs.microsoft.comrest/api/storageservices/storage-analytics-log-format
Description: |
  This is a Query Parser that is used to map Azure Storage Analytics (StorageFileLogs) to the Azure Sentinel Information Model FileEvent schema.
ParserName: vimFileEventAzureFileStorage
ParserQuery: |
    // https://docs.microsoft.comrest/api/storageservices/storage-analytics-logged-operations-and-status-messages
    let fileoperations=datatable(OperationName:string, EventType:string)[
    "DeleteFile", "FileDeleted"
    , "DeleteDirectory", "FileDeleted"
    , "CopyFile", "FileCopied"
    , "CreateFileSnapshot", "FileCreated"
    , "CreateDirectory", "FileCreated"
    , "CreateFile", "FileCreated"
    , "CreateShare", "FileCreated" // Creates a folder
    , "DeleteShare", "FileDeleted"
    , "PutRange", "FileModified"
    , "CopyFileDestination", "FileCopied"
    , "CopyFileSource", "FileCopied"
    ];
    StorageFileLogs
    // **** relevant data filtering;
    | where OperationName in (fileoperations)
    //
    | extend 
          EventCount=int(1)
        , EventStartTime=TimeGenerated
        , EventEndTime=TimeGenerated
    //	, EventType :string  ---> see lookup below
        , EventResult=iff(StatusText == 'Success', 'Success', 'Failure') 
      	, EventOriginalUid = CorrelationId
        , EventOriginalType=OperationName
        , EventProduct='Azure File Storage' 
        , EventVendor='Microsoft'
        , EventSchemaVersion='0.1.0'
    	, ActorUsername=AccountName
    	, ActorUsernameType='Simple'
    	, TargetFilePath=tostring(split(Uri,'?')[0]) 
    	, TargetFilePathFormat='URL'
      	, TargetUrl=Uri
        ,  SrcIpAddr=tostring(split(CallerIpAddress,':')[0])
        ,  SrcPortNumber=tostring(split(CallerIpAddress,':')[0])
      	, HttpUserAgent=UserAgentHeader
    | extend TargetFileName=tostring(split(TargetFilePath,'/')['-1'])
    | lookup fileoperations on OperationName
    // Aliases
    | extend User=ActorUsername
      , FilePath=TargetFilePath

    /// Unsupported Operations:
    // Other non supported 
    // fileoperations=datatable(x:string, y:string)[ "AbortCopyFile"
    // , "AcquireFileLease"
    // , "BreakFileLease"
    // , "ChangeFileLease"
    // , "ClearRange"
    // , "ListFilesystemDir"
    // , "CopyFileDestination"
    // , "GetFileProperties"
    // , "FilePreflightRequest"
    // , "FileSessionConnect"
    // , "GetDirectoryMetadata" GetDirectoryProperties"
    // , "GetEncryptionKey"
    // , "GetFile"
    // , "GetFileCopyInformation"
    // , "GetFileMetadata"
    // , "GetFilePermission"
    // , "GetFileProperties"
    // , "GetFileServiceProperties"
    // , "GetFileShareUniqueId"
    // , "GetPostMigrationFileInfo"
    // , "CopyFileSource"
    // , "GetShareAcl"
    // , "GetShareMetadata"
    // , "GetShareProperties"
    // , "GetShareStats"
    // , "ListFileRanges"
    // , "ListFiles"
    // , "ListFileSnapshots"
    // , "ListHandles"
    // , "ListShares"
    // , "PutFilePermission"
    // , "GetFilePermission"
    // , "GetFileProperties"
    // , "GetFileServiceProperties"
    // , "GetFileShareUniqueId"
    // , "PutRangeFromURL"
    // , "ReleaseFileLease"
    // , "SetDirectoryMetadata"
    // , "SetFileMetadata"
    // , "SetFileMetadata"
    // , "SetFileProperties"
    // , "SetFileServiceProperties"
    // , "SetShareAcl"
    // , "SetShareMetadata"
    // , "SetShareProperties"
    // , "SnapshotShare];